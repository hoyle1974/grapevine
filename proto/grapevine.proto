syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "proto/common.proto";

package proto;
option go_package = "github.com/hoyle1974/grapevine/proto";

// A gossip message used to search for something, if found the result
// should be returned to the requester via a SearchResult call
message Search {
  string search_id = 1;
  UserContact requestor = 2;
  string query = 3;
}   

message SearchResultRequest {
  string search_id = 1;
  UserContact responder = 2;
  string response = 3;
}

message SearchResultResponse {
  string search_id = 1;
  UserContact responder = 2;
  string response = 3;
}


// A gossip message can/may be repeated till endOfLife reached or dropped before
message Gossip {
  google.protobuf.Timestamp endOfLife = 1;
  oneof GossipUnion {
    Search search = 2;
  }
}

message GossipRequest {
    repeated Gossip gossip = 1;
}

message GossipResponse {
    repeated Gossip gossip = 1;
}

message SharedInvitationRequest {
}

message SharedInvitationResponse {
}

message ChangeDataOwnerRequest {
}

message ChangeDataOwnerResponse {
}

message ChangeDataRequest {
}

message ChangeDataResponse {
}

message LeaveSharedDataRequest {
}

message LeaveSharedDataResponse {
}

service GrapevineService {
  rpc Gossip (GossipRequest) returns (GossipResponse);

  rpc SearchResult (SearchResultRequest) returns (SearchResultResponse);

  rpc SharedInvitation (SharedInvitationRequest) returns (SharedInvitationResponse); 
  rpc ChangeDataOwner (ChangeDataOwnerRequest) returns (ChangeDataOwnerResponse);
  rpc ChangeData (ChangeDataRequest) returns (ChangeDataResponse);
  rpc LeaveSharedData (LeaveSharedDataRequest) returns (LeaveSharedDataResponse);
}

message SharedDataInvite {
  string sharedDataId  = 1;
  UserContact creator = 2;
  string as = 3;
}

message SharedDataInviteResponse {
  bool accepted = 1;
}

message SharedDataCreate {
  string sharedDataId = 1;
  UserContact originator = 2;
  string key = 3;
  string value = 4;
  string owner = 5;
  string visibility = 6;
}

message SharedDataCreateResponse {
}

message SharedDataSet {
  string sharedDataId = 1;
  UserContact originator = 2;
  string key = 3;
  string value = 4;
}

message SharedDataSetResponse {
  
}

message SharedDataAppend {
  string sharedDataId = 1;
  UserContact originator = 2;
  string key = 3;
  string value = 4;
}

message SharedDataAppendResponse {
  
}

message SharedDataChangeOwner {
  string sharedDataId = 1;
  UserContact originator = 2;
  string key = 3;
  string owner = 4;
}

message SharedDataChangeOwnerResponse {
  
}


