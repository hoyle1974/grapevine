// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: proto/grapevine.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	GrapevineService_Gossip_FullMethodName           = "/proto.GrapevineService/Gossip"
	GrapevineService_SearchResult_FullMethodName     = "/proto.GrapevineService/SearchResult"
	GrapevineService_SharedInvitation_FullMethodName = "/proto.GrapevineService/SharedInvitation"
	GrapevineService_ChangeDataOwner_FullMethodName  = "/proto.GrapevineService/ChangeDataOwner"
	GrapevineService_ChangeData_FullMethodName       = "/proto.GrapevineService/ChangeData"
	GrapevineService_LeaveSharedData_FullMethodName  = "/proto.GrapevineService/LeaveSharedData"
)

// GrapevineServiceClient is the client API for GrapevineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GrapevineServiceClient interface {
	Gossip(ctx context.Context, in *GossipRequest, opts ...grpc.CallOption) (*GossipResponse, error)
	SearchResult(ctx context.Context, in *SearchResultRequest, opts ...grpc.CallOption) (*SearchResultResponse, error)
	SharedInvitation(ctx context.Context, in *SharedInvitationRequest, opts ...grpc.CallOption) (*SharedInvitationResponse, error)
	ChangeDataOwner(ctx context.Context, in *ChangeDataOwnerRequest, opts ...grpc.CallOption) (*ChangeDataOwnerResponse, error)
	ChangeData(ctx context.Context, in *ChangeDataRequest, opts ...grpc.CallOption) (*ChangeDataResponse, error)
	LeaveSharedData(ctx context.Context, in *LeaveSharedDataRequest, opts ...grpc.CallOption) (*LeaveSharedDataResponse, error)
}

type grapevineServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGrapevineServiceClient(cc grpc.ClientConnInterface) GrapevineServiceClient {
	return &grapevineServiceClient{cc}
}

func (c *grapevineServiceClient) Gossip(ctx context.Context, in *GossipRequest, opts ...grpc.CallOption) (*GossipResponse, error) {
	out := new(GossipResponse)
	err := c.cc.Invoke(ctx, GrapevineService_Gossip_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grapevineServiceClient) SearchResult(ctx context.Context, in *SearchResultRequest, opts ...grpc.CallOption) (*SearchResultResponse, error) {
	out := new(SearchResultResponse)
	err := c.cc.Invoke(ctx, GrapevineService_SearchResult_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grapevineServiceClient) SharedInvitation(ctx context.Context, in *SharedInvitationRequest, opts ...grpc.CallOption) (*SharedInvitationResponse, error) {
	out := new(SharedInvitationResponse)
	err := c.cc.Invoke(ctx, GrapevineService_SharedInvitation_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grapevineServiceClient) ChangeDataOwner(ctx context.Context, in *ChangeDataOwnerRequest, opts ...grpc.CallOption) (*ChangeDataOwnerResponse, error) {
	out := new(ChangeDataOwnerResponse)
	err := c.cc.Invoke(ctx, GrapevineService_ChangeDataOwner_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grapevineServiceClient) ChangeData(ctx context.Context, in *ChangeDataRequest, opts ...grpc.CallOption) (*ChangeDataResponse, error) {
	out := new(ChangeDataResponse)
	err := c.cc.Invoke(ctx, GrapevineService_ChangeData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grapevineServiceClient) LeaveSharedData(ctx context.Context, in *LeaveSharedDataRequest, opts ...grpc.CallOption) (*LeaveSharedDataResponse, error) {
	out := new(LeaveSharedDataResponse)
	err := c.cc.Invoke(ctx, GrapevineService_LeaveSharedData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrapevineServiceServer is the server API for GrapevineService service.
// All implementations must embed UnimplementedGrapevineServiceServer
// for forward compatibility
type GrapevineServiceServer interface {
	Gossip(context.Context, *GossipRequest) (*GossipResponse, error)
	SearchResult(context.Context, *SearchResultRequest) (*SearchResultResponse, error)
	SharedInvitation(context.Context, *SharedInvitationRequest) (*SharedInvitationResponse, error)
	ChangeDataOwner(context.Context, *ChangeDataOwnerRequest) (*ChangeDataOwnerResponse, error)
	ChangeData(context.Context, *ChangeDataRequest) (*ChangeDataResponse, error)
	LeaveSharedData(context.Context, *LeaveSharedDataRequest) (*LeaveSharedDataResponse, error)
	mustEmbedUnimplementedGrapevineServiceServer()
}

// UnimplementedGrapevineServiceServer must be embedded to have forward compatible implementations.
type UnimplementedGrapevineServiceServer struct {
}

func (UnimplementedGrapevineServiceServer) Gossip(context.Context, *GossipRequest) (*GossipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Gossip not implemented")
}
func (UnimplementedGrapevineServiceServer) SearchResult(context.Context, *SearchResultRequest) (*SearchResultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchResult not implemented")
}
func (UnimplementedGrapevineServiceServer) SharedInvitation(context.Context, *SharedInvitationRequest) (*SharedInvitationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SharedInvitation not implemented")
}
func (UnimplementedGrapevineServiceServer) ChangeDataOwner(context.Context, *ChangeDataOwnerRequest) (*ChangeDataOwnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeDataOwner not implemented")
}
func (UnimplementedGrapevineServiceServer) ChangeData(context.Context, *ChangeDataRequest) (*ChangeDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeData not implemented")
}
func (UnimplementedGrapevineServiceServer) LeaveSharedData(context.Context, *LeaveSharedDataRequest) (*LeaveSharedDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LeaveSharedData not implemented")
}
func (UnimplementedGrapevineServiceServer) mustEmbedUnimplementedGrapevineServiceServer() {}

// UnsafeGrapevineServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GrapevineServiceServer will
// result in compilation errors.
type UnsafeGrapevineServiceServer interface {
	mustEmbedUnimplementedGrapevineServiceServer()
}

func RegisterGrapevineServiceServer(s grpc.ServiceRegistrar, srv GrapevineServiceServer) {
	s.RegisterService(&GrapevineService_ServiceDesc, srv)
}

func _GrapevineService_Gossip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GossipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrapevineServiceServer).Gossip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GrapevineService_Gossip_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrapevineServiceServer).Gossip(ctx, req.(*GossipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrapevineService_SearchResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrapevineServiceServer).SearchResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GrapevineService_SearchResult_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrapevineServiceServer).SearchResult(ctx, req.(*SearchResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrapevineService_SharedInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SharedInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrapevineServiceServer).SharedInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GrapevineService_SharedInvitation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrapevineServiceServer).SharedInvitation(ctx, req.(*SharedInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrapevineService_ChangeDataOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeDataOwnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrapevineServiceServer).ChangeDataOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GrapevineService_ChangeDataOwner_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrapevineServiceServer).ChangeDataOwner(ctx, req.(*ChangeDataOwnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrapevineService_ChangeData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrapevineServiceServer).ChangeData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GrapevineService_ChangeData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrapevineServiceServer).ChangeData(ctx, req.(*ChangeDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrapevineService_LeaveSharedData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaveSharedDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrapevineServiceServer).LeaveSharedData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GrapevineService_LeaveSharedData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrapevineServiceServer).LeaveSharedData(ctx, req.(*LeaveSharedDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GrapevineService_ServiceDesc is the grpc.ServiceDesc for GrapevineService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GrapevineService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.GrapevineService",
	HandlerType: (*GrapevineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Gossip",
			Handler:    _GrapevineService_Gossip_Handler,
		},
		{
			MethodName: "SearchResult",
			Handler:    _GrapevineService_SearchResult_Handler,
		},
		{
			MethodName: "SharedInvitation",
			Handler:    _GrapevineService_SharedInvitation_Handler,
		},
		{
			MethodName: "ChangeDataOwner",
			Handler:    _GrapevineService_ChangeDataOwner_Handler,
		},
		{
			MethodName: "ChangeData",
			Handler:    _GrapevineService_ChangeData_Handler,
		},
		{
			MethodName: "LeaveSharedData",
			Handler:    _GrapevineService_LeaveSharedData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/grapevine.proto",
}
